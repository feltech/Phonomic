// Generated by CoffeeScript 1.6.3
define(['underscore', 'jquery', 'brite', 'models/WordListModel', 'templates/WordSearchList', 'utils/logger', 'lib/jquery/jquery.transit'], function(_, $, brite, WordListModel, listTmpl, log) {
  var transitTime;
  transitTime = 200;
  return brite.registerView('WordListView', {
    create: function(words) {
      this.model = brite.registerDao(new WordListModel(words));
      return this.model.cache().then(function(cache) {
        return $.Deferred().resolve(listTmpl.render({
          words: cache
        }));
      });
    },
    init: function() {
      if (log('trace')) {
        console.debug("WordListView.init: " + this.$el.length);
      }
    },
    destroy: function() {
      if (log('trace')) {
        console.debug("WordListView.destroy");
      }
    },
    postDisplay: function() {
      if (log('trace')) {
        console.debug("WordListView.postDisplay: " + this.$el.length);
      }
    },
    hide: function() {
      var _this = this;
      if (log('trace')) {
        console.debug("WordListView.hide");
      }
      return $.Deferred(function(defer) {
        _this.$el.transition({
          opacity: 0
        }, transitTime, 'ease', function() {
          return defer.resolve(_this.$el);
        });
      });
    },
    events: {
      'click; li': function(evt) {
        var wordRef,
          _this = this;
        wordRef = $(evt.currentTarget).bEntity('Word');
        this.model.cache({
          ID: parseInt(wordRef.id)
        }).done(function(word) {
          return _this.$el.trigger('edit', {
            word: word
          });
        });
        return false;
      }
    },
    docEvents: {
      'search': function(evt, data) {
        var fetch;
        fetch = this.model.list(data.field, data.text);
        $.when(fetch).then(function() {
          if (log('trace')) {
            console.debug("WordListView.event.search: fetch and transition complete");
          }
        }).fail(function(xhr) {
          return $('#error-log').append(xhr.responseText);
        });
      }
    },
    daoEvents: {
      'result; WordListModel': function(evt) {
        var _this = this;
        if (evt.daoEvent.action === 'list') {
          this.hide().done(function() {
            return _this.$el.html(listTmpl.render({
              words: evt.daoEvent.result
            })).css({
              x: $(window).width()
            }).show().transition({
              x: 0,
              opacity: 1
            }, transitTime, 'snap');
          });
        }
        if (log('trace')) {
          console.debug(JSON.stringify(evt.daoEvent));
        }
      }
    }
  });
});
