// Generated by CoffeeScript 1.6.3
define(['underscore', 'jquery', 'brite', 'templates/WordEdit', 'utils/logger', 'lib/jquery/jquery.transit'], function(_, $, brite, editTmpl, log) {
  var transitTime;
  transitTime = 300;
  return brite.registerView('WordEditView', {
    create: function(word) {
      this.dao = brite.registerDao(word);
      this.model = word;
      return editTmpl.render({
        word: this.model
      });
    },
    init: function() {
      this.$el.hide();
    },
    destroy: function() {},
    postDisplay: function() {
      var sourceY,
        _this = this;
      $(window).on("resize." + this.id, function() {
        return _this.$el.trigger('resized');
      });
      sourceY = $(window).height() + $(window).scrollTop() + this.$el.parent().height();
      if (log('trace')) {
        console.log("WordEditView transitioning from y=" + sourceY);
      }
      this.$el.css({
        y: sourceY,
        opacity: 0
      }).show().transition({
        y: 0,
        opacity: 1
      }, transitTime, 'ease');
    },
    hide: function() {
      var _this = this;
      return $.Deferred(function(defer) {
        return _this.$el.transition({
          opacity: 0
        }, transitTime, function() {
          return defer.resolve(_this.$el);
        });
      });
    },
    events: {
      'click; #search-roman': function(evt) {
        evt.preventDefault();
        this.$el.trigger('search', {
          field: 'Roman',
          text: $('#roman').val()
        });
        return false;
      },
      'click; #search-native': function(evt) {
        evt.preventDefault();
        this.$el.trigger('search', {
          field: 'Native',
          text: $('#native').val()
        });
        return false;
      }
    },
    docEvents: {
      'resized': function() {
        console.log("WordEditView window size changed: " + ($(window).width()) + "x" + ($(window).height()));
        this.$el.parent().height(this.$el.height());
        return false;
      }
    },
    daoEvents: {}
  });
});
