// Generated by CoffeeScript 1.6.3
/*
 Module dependencies.
*/

var HoganCompiler, WordListModel, app, express, hoganCompiler, http, path, routes, user;

express = require('express');

routes = require('./routes');

user = require('./routes/user');

http = require('http');

path = require('path');

HoganCompiler = require('hogan-template-compiler');

WordListModel = require('./models/WordListModel');

app = express();

app.set('port', process.env.PORT || 3000);

app.set('views', __dirname + '/views');

app.set('view engine', 'hjs');

app.use(express.favicon());

app.use(express.logger('dev'));

app.use(express.compress());

app.use(express.bodyParser());

app.use(express.cookieParser('your secret here'));

app.use(express.session());

app.use(app.router);

app.use(express["static"](path.join(__dirname, 'public')));

if (app.get('env') === 'development') {
  app.use(express.errorHandler());
}

hoganCompiler = HoganCompiler({
  partialsDirectory: "" + (app.get('views')) + "/partials/",
  layoutsDirectory: "" + (app.get('views')) + "/layouts/"
});

app.get('/', routes.index);

app.get('/users', user.list);

app.get("/js/templates.js", function(req, res) {
  res.contentType(".js");
  return res.send(hoganCompiler.getSharedTemplates());
});

app.post("/search", function(req, res) {
  var model;
  model = new WordListModel();
  return model.list(req.body.text).done(function(json) {
    return res.send(json);
  });
});

http.createServer(app).listen(app.get('port'), function() {
  return console.log('Express server listening on port ' + app.get('port'));
});
