// Generated by CoffeeScript 1.6.3
/*
 Module dependencies.
*/

var WordListModel, app, deferred, exec, express, fs, hjs, hogan, http, path, routes, sys, templateCache, user;

process.kill(process.pid, 'SIGUSR1');

sys = require('sys');

exec = require('child_process').exec;

exec('node-inspector');

express = require('express');

hjs = require('hjs');

hogan = require('hogan.js');

routes = require('./routes');

user = require('./routes/user');

http = require('http');

path = require('path');

fs = require('fs');

deferred = require('jquery-deferred').Deferred;

WordListModel = require('./models/WordListModel');

templateCache = {};

app = express();

app.set('port', process.env.PORT || 3000);

app.set('views', __dirname + '/views');

app.set('view engine', 'hjs');

app.use(express.favicon());

app.use(express.logger('dev'));

app.use(express.compress());

app.use(express.bodyParser());

app.use(express.cookieParser('your secret here'));

app.use(express.session());

app.use(app.router);

app.use(express["static"](path.join(__dirname, 'public')));

if (app.get('env') === 'development') {
  app.use(express.errorHandler());
}

app.get('/', routes.index);

app.get('/users', user.list);

app.get("/js/template/:fileName", function(req, res, next) {
  var fileName;
  fileName = req.params.fileName.substr(0, req.params.fileName.lastIndexOf(".js"));
  return deferred(function(defer) {
    if (templateCache[fileName]) {
      return defer.resolve(templateCache[fileName]);
    } else {
      return fs.readFile("" + (app.get('views')) + "/partials/" + fileName + ".hjs", {
        encoding: 'utf8'
      }, function(err, file) {
        if (err) {
          defer.reject(err);
        } else {
          templateCache[fileName] = "define(['hogan'], function (Hogan) {\n	return new Hogan.Template(" + (hogan.compile(file, {
            asString: true
          })) + ");\n});";
        }
        return defer.resolve(templateCache[fileName]);
      });
    }
  }).done(function(tmpl) {
    res.contentType('.js');
    return res.send(tmpl);
  }).fail(function(err) {
    throw err;
  });
});

app.post("/search", function(req, res) {
  var model;
  model = new WordListModel();
  return model.list(req.body.text).done(function(json) {
    return res.send(json);
  });
});

http.createServer(app).listen(app.get('port'), function() {
  return console.log('Express server listening on port ' + app.get('port'));
});
